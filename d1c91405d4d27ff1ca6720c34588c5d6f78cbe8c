{
  "comments": [
    {
      "key": {
        "uuid": "4e7fdb36_b93b7c51",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1000177
      },
      "writtenOn": "2019-11-18T19:39:39Z",
      "side": 1,
      "message": "pending, to keep the same terms used in checks plugin.",
      "range": {
        "startLine": 9,
        "startChar": 63,
        "endLine": 9,
        "endChar": 67
      },
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "573ec932_17e07fe7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1016501
      },
      "writtenOn": "2019-11-19T08:32:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4e7fdb36_b93b7c51",
      "range": {
        "startLine": 9,
        "startChar": 63,
        "endLine": 9,
        "endChar": 67
      },
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e80c7e82_17d50c1d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1000177
      },
      "writtenOn": "2019-11-18T19:39:39Z",
      "side": 1,
      "message": "Add another bullet, that the in progress notification is not sent for the started checks, so that on every check, the check creation endpoint is called:\n\n  POST /changes/1/revisions/1/checks/test:my-checker\n\nwith basically one attribute:\n\n  \"state\": \"RUNNING\",",
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "417f3cf5_12db151c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1016501
      },
      "writtenOn": "2019-11-19T08:32:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e80c7e82_17d50c1d",
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "40aee5ea_0dcbeaa0",
        "filename": "src/main/java/jenkins/plugins/gerrit/AbstractGerritSCMSource.java",
        "patchSetId": 4
      },
      "lineNbr": 163,
      "author": {
        "id": 1000177
      },
      "writtenOn": "2019-11-18T19:39:39Z",
      "side": 1,
      "message": "This should be changed to the \"scheme:\" query, in our case the query would be:\n\n  \u003chost\u003e/plugins/checks/checks.pending/?query\u003dscheme:gerritforge\n\nBut even then, we should configure the scheme in pipeline configuration file, right?\n\nI think we should only integrate for now with the scheme query, and avoid the access with checkUUID for now. That way we would only have to configure one single \"scheme\" name and not multiple checker ids in the pipeline configuration file. This is also the preferable way to retrieve the pending checks from performance perspective, because otherwise you would have to spawn dedicated requests to query the pending checks for every checker.",
      "range": {
        "startLine": 163,
        "startChar": 24,
        "endLine": 163,
        "endChar": 89
      },
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f904d58e_288148ed",
        "filename": "src/main/java/jenkins/plugins/gerrit/AbstractGerritSCMSource.java",
        "patchSetId": 4
      },
      "lineNbr": 163,
      "author": {
        "id": 1016501
      },
      "writtenOn": "2019-11-19T08:32:03Z",
      "side": 1,
      "message": "Good idea. The documentation of the checks plugin still states that you have to use \"checker\" in the query [1], but let me try it.\n\n[1] https://gerrit.googlesource.com/plugins/checks/+/refs/heads/master/resources/Documentation/rest-api-pending-checks.md?autodive\u003d0%2F%2F#query-pending-checks",
      "parentUuid": "40aee5ea_0dcbeaa0",
      "range": {
        "startLine": 163,
        "startChar": 24,
        "endLine": 163,
        "endChar": 89
      },
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a863417_d526e963",
        "filename": "src/main/java/jenkins/plugins/gerrit/AbstractGerritSCMSource.java",
        "patchSetId": 4
      },
      "lineNbr": 163,
      "author": {
        "id": 1000177
      },
      "writtenOn": "2019-11-19T14:30:41Z",
      "side": 1,
      "message": "After thinking about it more, there could be another issue: we could get too much pending checks results for other project that we might don\u0027t want here. Especially if we add pipeline for the plugins: [1]. The better question whether we could combine scheme:foo with project:bar query? That way, the pipeline per project would ask for scheme:gerritforge, but would restrict to the specific project.\n\nA different approach would be to filter the pending checks to the specific project in the pipeline.\n\nWhat probably wouldn\u0027t work with the multi-branch-pipeline is to have one single pipeline for gerrit and all 150 plugins, because Jenkinsfile has to be defined per project and that whz we would need 151 pipelines that all would query for pending changes periodically.\n\n* [1] https://bugs.chromium.org/p/gerrit/issues/detail?id\u003d11949",
      "parentUuid": "f904d58e_288148ed",
      "range": {
        "startLine": 163,
        "startChar": 24,
        "endLine": 163,
        "endChar": 89
      },
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "baa1adca_f6920f9c",
        "filename": "src/main/java/jenkins/plugins/gerrit/AbstractGerritSCMSource.java",
        "patchSetId": 4
      },
      "lineNbr": 163,
      "author": {
        "id": 1016501
      },
      "writtenOn": "2019-11-19T16:05:12Z",
      "side": 1,
      "message": "Unfortunately there is no wildcard query or similar for pending checks. That would also help. Better yet would be to extend the checks plugin\u0027s rest API to support that.\nCombining should work. I anyway rewrote most of the change and put the filtering for pending checks in a separate trait, because the UI of Jenkins didn\u0027t allow stuff, which I would have needed as I did it before. Thus, we could just combine multiple filters.\nYes we would need one pipeline per project unfortunately :-(.",
      "parentUuid": "0a863417_d526e963",
      "range": {
        "startLine": 163,
        "startChar": 24,
        "endLine": 163,
        "endChar": 89
      },
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd179eb1_389be93a",
        "filename": "src/main/java/jenkins/plugins/gerrit/AbstractGerritSCMSource.java",
        "patchSetId": 4
      },
      "lineNbr": 251,
      "author": {
        "id": 1000177
      },
      "writtenOn": "2019-11-18T19:39:39Z",
      "side": 1,
      "message": "Why is this check needed?",
      "range": {
        "startLine": 249,
        "startChar": 6,
        "endLine": 251,
        "endChar": 7
      },
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfa2d25b_ab1df9b1",
        "filename": "src/main/java/jenkins/plugins/gerrit/AbstractGerritSCMSource.java",
        "patchSetId": 4
      },
      "lineNbr": 251,
      "author": {
        "id": 1016501
      },
      "writtenOn": "2019-11-19T08:32:03Z",
      "side": 1,
      "message": "FireBug was complaining. My guess is that there is a better solution, which I don\u0027t know yet with my limited Java-foo. Will change that.",
      "parentUuid": "dd179eb1_389be93a",
      "range": {
        "startLine": 249,
        "startChar": 6,
        "endLine": 251,
        "endChar": 7
      },
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74fa916e_02df95a7",
        "filename": "src/main/java/jenkins/plugins/gerrit/checks/CheckState.java",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000177
      },
      "writtenOn": "2019-11-19T01:06:12Z",
      "side": 1,
      "message": "Now, I see, you copied/paste it from the checks plugin: [1], but it seems that the formatting screwed up during the copy operation.\n\nThinking about my post to the mailing list, may be it is a better idea to host the client library in the checks plugin, so that the code could be re-used in the plugin and in the checks-rest-client-library.\n\n* [1] https://gerrit.googlesource.com/plugins/checks/+/refs/heads/master/java/com/google/gerrit/plugins/checks/api/CheckState.java",
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb661900_d96f6094",
        "filename": "src/main/java/jenkins/plugins/gerrit/checks/CheckState.java",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1016501
      },
      "writtenOn": "2019-11-19T08:32:03Z",
      "side": 1,
      "message": "We should definitely solve this differently. Lets see what the response on the mailing list will be. I will fix the formatting in the meantime. Copying from gitiles always screws empty lines for me.",
      "parentUuid": "74fa916e_02df95a7",
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "784ca272_cbc9afa0",
        "filename": "src/main/java/jenkins/plugins/gerrit/checks/CheckState.java",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000177
      },
      "writtenOn": "2019-11-19T14:30:41Z",
      "side": 1,
      "message": "I went ahead and moved the REST API client to checks plugin in this change: [1]. The publishing to the Maven Central is still missing, but can you try to integrate this library with this change?\n\n* [1] https://gerrit-review.googlesource.com/c/plugins/checks/+/246172",
      "parentUuid": "eb661900_d96f6094",
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11d7ae97_b90c950a",
        "filename": "src/main/java/jenkins/plugins/gerrit/checks/CheckState.java",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1016501
      },
      "writtenOn": "2019-11-19T16:05:12Z",
      "side": 1,
      "message": "Thanks David. Will do!",
      "parentUuid": "784ca272_cbc9afa0",
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f85feb3e_73d9964d",
        "filename": "src/main/java/jenkins/plugins/gerrit/checks/CheckState.java",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1000177
      },
      "writtenOn": "2019-11-18T19:39:39Z",
      "side": 1,
      "message": "Nit: new line between new enum instances, here and below.",
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "baf6c7cd_6d32c993",
        "filename": "src/main/java/jenkins/plugins/gerrit/checks/CheckState.java",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1016501
      },
      "writtenOn": "2019-11-19T16:05:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f85feb3e_73d9964d",
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ba78b75_4964998a",
        "filename": "src/main/java/jenkins/plugins/gerrit/checks/CheckState.java",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1000177
      },
      "writtenOn": "2019-11-18T19:39:39Z",
      "side": 1,
      "message": "Should this be rather false?",
      "range": {
        "startLine": 36,
        "startChar": 14,
        "endLine": 36,
        "endChar": 18
      },
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9ceb752_6584089c",
        "filename": "src/main/java/jenkins/plugins/gerrit/checks/CheckState.java",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1016501
      },
      "writtenOn": "2019-11-19T08:32:03Z",
      "side": 1,
      "message": "Good question. Since I copy pasted, I didn\u0027t look closer. I would leave it as is for now. Hopefully, we can anyway get rid of the copy/pasted code here.",
      "parentUuid": "7ba78b75_4964998a",
      "range": {
        "startLine": 36,
        "startChar": 14,
        "endLine": 36,
        "endChar": 18
      },
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cad48e76_a27b18bf",
        "filename": "src/main/java/jenkins/plugins/gerrit/checks/GerritChecksApi.java",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000177
      },
      "writtenOn": "2019-11-18T19:39:39Z",
      "side": 1,
      "message": "This is fine to park the Checks Rest API in this repository, but in long term we should find a better place for it.\n\nThe request to add plugin specific APIs to the existing gerrit-rest-java-client: [1] project was rejected, see this issue: [2] and this PR: [3], where Khai tried to add plugin API for verify-status plugin.\n\nAnother option would be a new project on gerrit-review, or add the API in checks plugin project itself.\n\n* [1] https://github.com/uwolfer/gerrit-rest-java-client\n* [2] https://github.com/uwolfer/gerrit-rest-java-client/issues/59\n* [3] https://github.com/uwolfer/gerrit-rest-java-client/pull/60",
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46bdcc71_d56ba9ab",
        "filename": "src/main/java/jenkins/plugins/gerrit/checks/GerritChecksApi.java",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1016501
      },
      "writtenOn": "2019-11-19T08:32:03Z",
      "side": 1,
      "message": "I think it putting plugin APIs would not be a good fit for the gerrit-rest-java-client. The way plugins are maintained right now (non-core plugins), could lead to issues. I liked your other suggestion on the mailing list more to let plugins provide a client in their project. Keeps everything closer together and IMHO easier to maintain.",
      "parentUuid": "cad48e76_a27b18bf",
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12dfea42_dcec4b22",
        "filename": "src/main/java/jenkins/plugins/gerrit/checks/GerritChecksApi.java",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1000177
      },
      "writtenOn": "2019-11-18T19:39:39Z",
      "side": 1,
      "message": "This is useful method, that accepts checker UUID, however, even more useful method to query for the checkers is to use scheme: - query, quoting rest-api-pending-checks.md, from the checks plugin:\n\n  * \u003ca id\u003d\"scheme-operator\"\u003e\u003c/a\u003e `scheme:\u0027SCHEME\u0027`:\n  Matches checks with the scheme \u0027SCHEME\u0027.\n\nSo my suggestion would be, to add yet another method to this class and rename this one:\n\n  getChangesWithPendingChecksForCheckerId(String id);\n  getChangesWithPendingChecksForCheckerScheme(String scheme);",
      "range": {
        "startLine": 38,
        "startChar": 33,
        "endLine": 38,
        "endChar": 60
      },
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ef3b1c7_a7277119",
        "filename": "src/main/java/jenkins/plugins/gerrit/checks/GerritChecksApi.java",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1016501
      },
      "writtenOn": "2019-11-19T08:32:03Z",
      "side": 1,
      "message": "Good idea. I will work on that.",
      "parentUuid": "12dfea42_dcec4b22",
      "range": {
        "startLine": 38,
        "startChar": 33,
        "endLine": 38,
        "endChar": 60
      },
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d4035d5_dfc74e3b",
        "filename": "src/main/java/jenkins/plugins/gerrit/checks/GerritChecksApi.java",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1016501
      },
      "writtenOn": "2019-11-19T16:05:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ef3b1c7_a7277119",
      "range": {
        "startLine": 38,
        "startChar": 33,
        "endLine": 38,
        "endChar": 60
      },
      "revId": "d1c91405d4d27ff1ca6720c34588c5d6f78cbe8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}